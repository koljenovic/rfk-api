# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.dict_type import DictType  # noqa: F401,E501
from swagger_server.models.where_type import WhereType  # noqa: F401,E501
from swagger_server import util


class UpdateType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, what: DictType=None, where: List[WhereType]=None):  # noqa: E501
        """UpdateType - a model defined in Swagger

        :param what: The what of this UpdateType.  # noqa: E501
        :type what: DictType
        :param where: The where of this UpdateType.  # noqa: E501
        :type where: List[WhereType]
        """
        self.swagger_types = {
            'what': DictType,
            'where': List[WhereType]
        }

        self.attribute_map = {
            'what': 'what',
            'where': 'where'
        }
        self._what = what
        self._where = where

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateType of this UpdateType.  # noqa: E501
        :rtype: UpdateType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def what(self) -> DictType:
        """Gets the what of this UpdateType.


        :return: The what of this UpdateType.
        :rtype: DictType
        """
        return self._what

    @what.setter
    def what(self, what: DictType):
        """Sets the what of this UpdateType.


        :param what: The what of this UpdateType.
        :type what: DictType
        """
        if what is None:
            raise ValueError("Invalid value for `what`, must not be `None`")  # noqa: E501

        self._what = what

    @property
    def where(self) -> List[WhereType]:
        """Gets the where of this UpdateType.


        :return: The where of this UpdateType.
        :rtype: List[WhereType]
        """
        return self._where

    @where.setter
    def where(self, where: List[WhereType]):
        """Sets the where of this UpdateType.


        :param where: The where of this UpdateType.
        :type where: List[WhereType]
        """
        if where is None:
            raise ValueError("Invalid value for `where`, must not be `None`")  # noqa: E501

        self._where = where
